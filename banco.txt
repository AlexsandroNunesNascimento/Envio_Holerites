Parte 1: O Passo a Passo para Configurar o Banco no Supabase
Este guia explica como configurar tudo do zero, desde a criação das tabelas até a segurança.

Passo 1: Criar as Tabelas Iniciais (administrador e funcionario)
A base do nosso sistema. Uma tabela para quem gerencia e outra para quem acessa os holerites.
Vá para o painel do seu projeto Supabase.
No menu esquerdo, encontre o ícone de banco de dados e clique em SQL Editor.
Clique em "+ New query".
Copie e cole o código abaixo para criar as duas tabelas.

-- Cria a tabela para os administradores do sistema
CREATE TABLE public.administrador (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email TEXT UNIQUE NOT NULL,
  senha TEXT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT now() NOT NULL
);

-- Cria a tabela para os funcionários
CREATE TABLE public.funcionario (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome TEXT NOT NULL,
  cpf VARCHAR(14) UNIQUE NOT NULL,
  loja TEXT NOT NULL,
  senha TEXT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT now() NOT NULL
);

Passo 2: Criar a Tabela de Histórico (holerites)
Em vez de salvar um único holerite por funcionário, criamos uma tabela separada para que cada funcionário possa ter um histórico.
Ainda no SQL Editor, em uma nova aba de query, cole o código abaixo.

-- Cria a tabela para armazenar o histórico de holerites
CREATE TABLE public.holerites (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  -- Cria um link para a tabela 'funcionario'. Se um funcionário for deletado, seus holerites também serão.
  funcionario_id BIGINT NOT NULL REFERENCES public.funcionario(id) ON DELETE CASCADE,
  mes_referencia DATE NOT NULL,
  pdf_path TEXT NOT NULL,
  uploaded_at TIMESTAMPTZ DEFAULT now() NOT NULL
);

Passo 3: Criar o Local de Armazenamento (Storage Bucket)
Aqui é onde os arquivos PDF serão fisicamente guardados.
No menu esquerdo, clique no ícone do Storage.
Clique em "Create a new bucket".
No nome do bucket, digite exatamente: holerites
IMPORTANTE: Deixe a opção "Public bucket" desligada (desmarcada). Isso garante que só pessoas com permissão possam acessar os arquivos.
Clique em "Create bucket".

Passo 4: Adicionar a Coluna de Rastreamento
Esta coluna registrará quando um funcionário baixou um holerite, essencial para o relatório.
Volte para o SQL Editor.
Cole e rode o comando abaixo.

-- Adiciona a coluna 'data_download' à tabela 'holerites' para o rastreamento
ALTER TABLE public.holerites
ADD COLUMN data_download TIMESTAMPTZ;

Passo 5: Configurar as Regras de Segurança (Policies)
Este é o passo mais crítico que resolveu os erros de "violates row-level security". Por padrão, o Supabase bloqueia todo acesso. Essas regras abrem as portas de forma controlada.
Ainda no SQL Editor, cole e rode todo o bloco de código abaixo. Ele vai ativar a segurança e criar todas as permissões necessárias de uma só vez.

-- ATIVA a segurança em nível de linha (RLS) para todas as nossas tabelas.
ALTER TABLE public.administrador ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.funcionario ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.holerites ENABLE ROW LEVEL SECURITY;

-- CRIA as permissões (Policies) para a tabela 'administrador'
CREATE POLICY "Acesso total para administradores" ON public.administrador FOR ALL USING (true) WITH CHECK (true);

-- CRIA as permissões para a tabela 'funcionario'
CREATE POLICY "Acesso total para funcionarios" ON public.funcionario FOR ALL USING (true) WITH CHECK (true);

-- CRIA as permissões para a tabela 'holerites'
CREATE POLICY "Acesso total para holerites" ON public.holerites FOR ALL USING (true) WITH CHECK (true);

-- CRIA a permissão para ENVIAR (upload) arquivos para o bucket 'holerites'
CREATE POLICY "Permitir uploads no bucket holerites" ON storage.objects FOR INSERT WITH CHECK (bucket_id = 'holerites');

-- CRIA a permissão para BAIXAR (download) arquivos do bucket 'holerites'
CREATE POLICY "Permitir downloads do bucket holerites" ON storage.objects FOR SELECT USING (bucket_id = 'holerites');

Parte 2: O Script SQL Completo (Todos os Comandos Consolidados)
Para facilitar, aqui está um único script que você pode executar em um projeto Supabase novo para configurar tudo de uma só vez. Ele contém os 7 comandos SQL essenciais que usamos (3 CREATE TABLE, 1 ALTER TABLE, 3 grupos de POLICY/RLS).

-- ====================================================================
-- SCRIPT COMPLETO DE CONFIGURAÇÃO DO BANCO DE DADOS - SISTEMA HOLERITE
-- ====================================================================


-- =========== PASSO 1: CRIAÇÃO DAS TABELAS ============

-- Tabela 1: Administradores do Sistema
CREATE TABLE public.administrador (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email TEXT UNIQUE NOT NULL,
  senha TEXT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT now() NOT NULL
);

-- Tabela 2: Funcionários
CREATE TABLE public.funcionario (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome TEXT NOT NULL,
  cpf VARCHAR(14) UNIQUE NOT NULL,
  loja TEXT NOT NULL,
  senha TEXT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT now() NOT NULL
);

-- Tabela 3: Histórico de Holerites (vinculada aos funcionários)
CREATE TABLE public.holerites (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  funcionario_id BIGINT NOT NULL REFERENCES public.funcionario(id) ON DELETE CASCADE,
  mes_referencia DATE NOT NULL,
  pdf_path TEXT NOT NULL,
  uploaded_at TIMESTAMPTZ DEFAULT now() NOT NULL
);


-- =========== PASSO 2: ALTERAÇÃO DA TABELA PARA RASTREAMENTO ============

-- Adiciona a coluna para rastrear a data e hora do download
ALTER TABLE public.holerites
ADD COLUMN data_download TIMESTAMPTZ;


-- =========== PASSO 3: CONFIGURAÇÃO DA SEGURANÇA (RLS e POLICIES) ============

-- 3.1: Habilita a segurança para todas as tabelas
ALTER TABLE public.administrador ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.funcionario ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.holerites ENABLE ROW LEVEL SECURITY;

-- 3.2: Cria as Políticas de acesso às tabelas
CREATE POLICY "Acesso total para administradores" ON public.administrador FOR ALL USING (true) WITH CHECK (true);
CREATE POLICY "Acesso total para funcionarios" ON public.funcionario FOR ALL USING (true) WITH CHECK (true);
CREATE POLICY "Acesso total para holerites" ON public.holerites FOR ALL USING (true) WITH CHECK (true);

-- 3.3: Cria as Políticas de acesso ao Storage (armazenamento de arquivos)
CREATE POLICY "Permitir uploads no bucket holerites" ON storage.objects FOR INSERT WITH CHECK (bucket_id = 'holerites');
CREATE POLICY "Permitir downloads do bucket holerites" ON storage.objects FOR SELECT USING (bucket_id = 'holerites');

-- Fim do script.